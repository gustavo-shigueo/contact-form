@font-face {
	font-family: "Karla";
	src: url("assets/fonts/static/Karla-Regular.ttf");
	font-weight: 400;
}

@font-face {
	font-family: "Karla";
	src: url("assets/fonts/static/Karla-Bold.ttf");
	font-weight: 700;
}

*,
*::before,
*::after {
	box-sizing: border-box;
	font: inherit;
	margin: 0;
	padding: 0;
	transition-behavior: allow-discrete;
}

:root {
	--white: hsl(0, 0%, 100%);

	--green-200: hsl(148, 38%, 91%);
	--green-600: hsl(169, 82%, 27%);

	--grey-500: hsl(186, 15%, 59%);
	--grey-900: hsl(187, 24%, 22%);

	--red: hsl(0, 66%, 54%);

	font-family: "Karla", system-ui, sans-serif;
	font-size: 16px;
	font-weight: 400;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

html,
body,
#root {
	inline-size: 100%;
	block-size: 100%;
}

body {
	background-color: var(--green-200);
	color: var(--grey-900);
}

#root {
	display: grid;
	grid-template-rows: 1fr auto;
	gap: 1fr;
	place-items: center;
	padding: 1rem;
}

main {
	inline-size: min(100%, 720px);
	margin: auto;
	padding: 2rem;
	border-radius: .75rem;

	background-color: var(--white);
}

h1 {
	font-weight: 700;
	font-size: 1.5rem;
	margin-block-end: 1em;
}

form {
	--columns: repeat(auto-fill, minmax(min(300px, 100%), 1fr));
	--gap: 1rem;

	display: grid;
	grid-template-columns: var(--columns);
	gap: var(--gap);
	accent-color: var(--green-600);
}

.full-width {
	grid-column: 1 / -1;
}

textarea {
	resize: none;
	block-size: 12ex;
}

.field {
	display: grid;
	grid-template-rows: auto auto 1fr;
	align-items: start;
	gap: 0.5rem;

	/* :is(legend) is not working in Firefox, hence the second selector being needed */
	& > :is(label:has(+ [required]), [required] + label)::after,
	& > fieldset:has([required]) legend::after {
		content: "*";
		margin-inline-start: .75ch;
		font-size: 1.15em;

		vertical-align: text-top;

		color: var(--green-600);
	}

	& > fieldset {
		border: none;

		& > legend {
			margin-block-end: 1rem;
		}

		& > .grid {
			display: grid;
			grid-template-columns: var(--columns);
			gap: var(--gap);
		}
	}

	&:has(.errors:not(:empty)):has(:user-invalid) {
		& > :is(input:not([type="checkbox"], [type="radio"]), textarea),
		&.radio-button {
			border-color: var(--red);
		}
	}

	& > :is(input:not([type="checkbox"], [type="radio"]), textarea),
	& .radio-button {
		border: 1px solid var(--grey-500);
		padding: .825em 1.25em;
		border-radius: .5rem;
		outline: none;

		&:focus-within {
			border-color: var(--green-600);
		}
	}

	& .radio-button {
		display: flex;
		align-items: center;
		gap: 1rem;
		cursor: pointer;

		& > input {
			position: absolute;
			display: block;
			width: 0;
			height: 0;
			border: none;
			outline: none;
		}

		&:has(> input:checked) {
			background-color: var(--green-200);

			&::before {
				background-image: url("assets/images/icon-radio-selected.svg");
				background-repeat: no-repeat;
				outline-color: transparent;
			}
		}

		&::before {
			content: "";
			display: block;
			inline-size: 21px;
			block-size: 21px;

			outline: 1px solid var(--grey-500);
			outline-offset: -2px;

			border-radius: 100vmax;
		}
	}

	&:has(> .checkbox) {
		margin-block: 1.5rem;
	}

	& > .checkbox {
		display: flex;
		gap: 1rem;
		align-items: start;

		& > input {
			position: absolute;
			display: block;
			width: 0;
			height: 0;
			border: none;
			outline: none;
		}

		&::before {
			content: "";
			display: block;
			inline-size: 18px;
			aspect-ratio: 1;

			outline: 1px solid var(--grey-500);
			outline-offset: -2px;

			border-radius: 2px;
		}

		&:has(> :checked)::before {
			outline-color: transparent;
			background-image: url("assets/images/icon-checkbox-check.svg");
			background-repeat: no-repeat;
		}
	}

	&:not(:has(:user-invalid)) .errors {
		display: none;
	}

	& .errors {
		list-style: none;
		color: var(--red);
	}
}

button {
	padding: 1em;
	border: none;

	color: var(--white);
	border-radius: .5em;

	font-weight: 700;
	background-color: var(--green-600);
	cursor: pointer;
	transition: filter 300ms ease, background-color 300ms ease;

	&:hover,
	&:focus-visible {
		filter: brightness(1.1);
	}

	&:active {
		background-color: var(--grey-900);
	}
}

.success {
	position: fixed;
	top: 2rem;
	left: 50%;

	flex-direction: column;
	gap: 10px;

	background-color: var(--grey-900);
	color: var(--white);
	padding: 1.5rem;
	border-radius: .75rem;
	border: none;

	& > header {
		display: flex;
		align-items: center;
		gap: 5px;
	}

	& strong {
		font-size: 1.15rem;
		font-weight: 700;
	}
}

[popover] {
	translate: -50% calc(-100% - 2rem);

	transition-property: display, overlay, translate;
	transition-duration: 300ms;
	transition-timing-function: ease-in-out;

	&:popover-open {
		display: flex;
		translate: -50% 0;

		@starting-style {
			translate: -50% calc(-100% - 2rem);
		}
	}
}
